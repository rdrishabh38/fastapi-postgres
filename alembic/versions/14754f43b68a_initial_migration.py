"""Initial Migration

Revision ID: 14754f43b68a
Revises: 
Create Date: 2025-02-24 12:33:01.704042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '14754f43b68a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drivers',
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('driver_license', sa.String(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('rating', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('driver_id'),
    sa.UniqueConstraint('driver_license'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number'),
    schema='ride_demo'
    )
    op.create_index(op.f('ix_ride_demo_drivers_driver_id'), 'drivers', ['driver_id'], unique=False, schema='ride_demo')
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number'),
    schema='ride_demo'
    )
    op.create_index(op.f('ix_ride_demo_users_user_id'), 'users', ['user_id'], unique=False, schema='ride_demo')
    op.create_table('cars',
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('make', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('license_plate', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['ride_demo.drivers.driver_id'], ),
    sa.PrimaryKeyConstraint('car_id'),
    sa.UniqueConstraint('license_plate'),
    schema='ride_demo'
    )
    op.create_index(op.f('ix_ride_demo_cars_car_id'), 'cars', ['car_id'], unique=False, schema='ride_demo')
    op.create_table('rides',
    sa.Column('ride_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('pickup_location', geoalchemy2.types.Geography(geometry_type='POINT', srid=4326, from_text='ST_GeogFromText', name='geography', nullable=False), nullable=False),
    sa.Column('dropoff_location', geoalchemy2.types.Geography(geometry_type='POINT', srid=4326, from_text='ST_GeogFromText', name='geography', nullable=False), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('fare', sa.Numeric(), nullable=False),
    sa.Column('distance', sa.Numeric(), nullable=False),
    sa.Column('started_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['ride_demo.drivers.driver_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ride_demo.users.user_id'], ),
    sa.PrimaryKeyConstraint('ride_id'),
    schema='ride_demo'
    )
    op.create_index('idx_rides_dropoff_location', 'rides', ['dropoff_location'], unique=False, schema='ride_demo', postgresql_using='gist')
    op.create_index('idx_rides_pickup_location', 'rides', ['pickup_location'], unique=False, schema='ride_demo', postgresql_using='gist')
    op.create_index(op.f('ix_ride_demo_rides_ride_id'), 'rides', ['ride_id'], unique=False, schema='ride_demo')
    op.drop_table('spatial_ref_sys')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.drop_index(op.f('ix_ride_demo_rides_ride_id'), table_name='rides', schema='ride_demo')
    op.drop_index('idx_rides_pickup_location', table_name='rides', schema='ride_demo', postgresql_using='gist')
    op.drop_index('idx_rides_dropoff_location', table_name='rides', schema='ride_demo', postgresql_using='gist')
    op.drop_table('rides', schema='ride_demo')
    op.drop_index(op.f('ix_ride_demo_cars_car_id'), table_name='cars', schema='ride_demo')
    op.drop_table('cars', schema='ride_demo')
    op.drop_index(op.f('ix_ride_demo_users_user_id'), table_name='users', schema='ride_demo')
    op.drop_table('users', schema='ride_demo')
    op.drop_index(op.f('ix_ride_demo_drivers_driver_id'), table_name='drivers', schema='ride_demo')
    op.drop_table('drivers', schema='ride_demo')
    # ### end Alembic commands ###
